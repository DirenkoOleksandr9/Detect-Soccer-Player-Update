name: pipeline

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'Optional: URL to .mp4 to test (will download as 9.mp4 and trimmed for CI)'
        required: false
        default: ''
  push:
    branches: [ main ]

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      CI_CLIP_SECONDS: 8
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg libsm6 libxext6
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Download external video if provided
        if: ${{ github.event.inputs.video_url != '' }}
        run: |
          curl -L "${{ github.event.inputs.video_url }}" -o 9.mp4
      - name: Prepare video (prefer repo 9.mp4 or downloaded; else generate synthetic)
        run: |
          if [ ! -f 9.mp4 ]; then
            ffmpeg -f lavfi -i testsrc=size=640x360:rate=30 -t 5 -pix_fmt yuv420p 9.mp4 -y
          fi
          # Trim to CI duration to keep CPU run fast
          ffmpeg -y -i 9.mp4 -t $CI_CLIP_SECONDS -c copy 9_ci.mp4 || ffmpeg -y -i 9.mp4 -t $CI_CLIP_SECONDS 9_ci.mp4
          mv -f 9_ci.mp4 9.mp4
      - name: Run full pipeline
        run: |
          python - << 'PY'
          import os
          from main_pipeline import SoccerHighlightPipeline
          p = SoccerHighlightPipeline()
          p.run_full_pipeline('9.mp4', target_player_id=1, output_dir='output')
          PY
      - name: Upload artifacts (outputs)
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: |
            output/*.json
            output/*.mp4
            output/*
